buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
        mavenLocal()
        maven {
            url "http://nexus.containerstore.com/nexus/content/repositories/public/"
        } //<1>
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.containerstore.release:gradle-releaser:2.4.0-SNAPSHOT") //<2>
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'com.containerstore.release' //<3>

release {
    dryRun = false //<1>
    versionFormat = ".<count>" //<2>
    releaseType = 'continuous' //<3>
    currentBranch = "master" //<4>
    repoOwner = "RaviVaranasi" //<5>
    githubProject = "TestRepo" //<6>
    tagContinuousDeliveryBuild = false //<7>
}

//Packaging
war {
    baseName = "web"
    version = rootProject.version
    manifest {
        attributes(
                'Version': "$rootProject.version",
                "Build": "$rootProject.version",
                "Builder": "gradle",
        )
    }
}

jar {
    baseName = 'web'
    version = "$rootProject.version"
    manifest {
        attributes(
                'Version': "$rootProject.version",
                "Build": "$rootProject.version",
                "Builder": "gradle",
        )
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

//Gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
